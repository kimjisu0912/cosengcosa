<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	맵퍼의 namespace 속성은 맵핑 구문을 그룹핑 하는 역할을 한다.
	여러 맵퍼에서 맵핑 구문의 id 속성의 값이 중복되더라도 namespace와
	맵핑 구문의 id 속성에 지정한 값을 합쳐서 호출하기 때문에 맵핑 구문이
	중복되지 않게 분류하여 관리할 수 있다.
	테이블 이름을 바탕으로 namespace를 지정하고 맵핑 구문의 id 속성의
	값은 SQL 문의 맥락에 따라서 명명하는 것이 일반적 이다.
	
	parameterType 속성에는 주로 SQL 문의 조건에 사용할 파라미터의
	데이터 타입을 지정하는 속성으로 자바 원시 타입(기본 타입, String)과 자바빈,
	Map과 같은 타입을 지정할 수 있다. resultType 속성도 parameterType
	속성에서 지정한 타입을 많이 사용한다. parameterType과 resultType에
	지정할 데이터 타입이 자바 원시 타입이면 생략가능하다.
	
	마이바티스 참고 사이트
	  - http://blog.mybatis.org/
	  - http://www.mybatis.org/mybatis-3/ko/index.html
-->
<mapper namespace="com.cosengcosa.room.mapper.ClassMainMapper" >

<!-- 이번에 별칭을 사용해보자 동적쿼리에 부동호가 사용되게 되면 CDATA 기법 사용해야된다. -->
	<select id="classMainList" resultType="ClassMain" parameterType="hashmap">
		SELECT 
			cm_no 		AS cmNo,
		    cm_id 		AS cmId,
		    cm_code 	AS cmCode,
		    cm_name 	AS cmName,
		    cm_sdate 	AS cmSdate,
		    cm_edate 	AS cmEdate,
		    cm_price 	AS cmPrice,
		    cm_count 	AS cmCount,
		    cm_recommend AS cmRecommend,
		    cm_star 	AS cmStar,
		    file1 		AS file1,
		    video 		AS video,
		    cm_yn 		AS cmYn
		FROM classmain
		<where>
			cm_yn = "Y"
	 		<if test="type=='cmname'">
	 			AND cm_name LIKE CONCAT('%', #{keyword}, '%')
	 		</if>
	 	</where>
		ORDER BY cm_no DESC
		LIMIT #{startRow}, #{num}
	</select>
	<!-- 
		전체 게시 글 수를 반환하는 매핑 구문(동적쿼리 적용- if태그가 true면 where절이 만들어진다)
		즉 지금현재 3개의 if태그중 하나라도 true가 되면 where절이 생성된다.
	 -->
	 <select id="getClassMainCount" resultType="int">
	 	SELECT 
	 		COUNT(*) 
	 	FROM 
	 		classmain
	 	<where>
			cm_yn = "Y"
	 		<if test="type=='cmname'">
	 			AND cm_name LIKE CONCAT('%', #{keyword}, '%')
	 		</if>
	 	</where>
	 </select>
	 
	 
	 <!--
		Board 클래스의 프로퍼티와 테이블의 컬럼을 맵핑하는 ResultMap
		 
		테이블에 언터스코어 표기법으로 작성된 컬럼이 존재하면 도메인 객체의
		카멜케이스된 프로퍼티를 통해 컬럼의 값을 제대로 읽어오지 못한다.
		아래와 같이 resultMap을 정의해 테이블의 컬럼과 도메인 객체의
		프로퍼티를 설정하면 제대로 읽어 올 수 있다.
		
		resultMap 태그에 type 속성은 쿼리 결과를 매핑할 자바 도메인 객체를
		지정하고 그 하부에 <id> 태그를 사용해 기본키 컬럼을 지정한다.
		나머지 컬럼은 <result> 태그를 사용해 지정하면 도메인 객체로 맵핑할 수 있다.  
	-->
	<resultMap id="classMainResultMap" type="ClassMain">
		<id property="cmNo" column="cm_no" />
		<result property="cmId" column="cm_id" />
		<result property="cmCode" column="cm_code" />
		<result property="cmName" column="cm_name" />
		<result property="cmSdate" column="cm_sdate" />
		<result property="cmEdate" column="cm_edate" />
		<result property="cmPrice" column="cm_price" />
		<result property="cmCount" column="cm_count" />
		<result property="cmRecommend" column="cm_recommend" />
		<result property="cmStar" column="cm_star" />
		<result property="file1" column="file1" />
		<result property="video" column="video" />
		<result property="cmYn" column="cm_yn" />
	</resultMap>
</mapper>	



